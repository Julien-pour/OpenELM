[{"program_str": "def f(seq: List[int], n=0, length=0) -> bool:\n    \"\"\"Find a sequence of 1's and 2's of a given length that that adds up to n\"\"\"\n    return all((i in [1, 2] for i in seq)) and sum(seq) == n and (len(seq) == length)\ndef g(n = 0, length = 0):\n    return [2] * (n - length) + [1] * (2 * length - n)\nassert f(g())", "emb": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}, {"program_str": "def f(i: int, li=[51, -68, -57, 8, 77, -80, -28, -24, 11, 40, 57, 60, 53], target=11) -> bool:\n    \"\"\"Find the index of an item in a list. Any such index is fine.\"\"\"\n    return li[i] == target\ndef g(li = [51, -68, -57, 8, 77, -80, -28, -24, 11, 40, 57, 60, 53], target = 11):\n    return li.index(target)\nassert f(g())", "emb": [1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0]}, {"program_str": "def f(n: int, a=-1950797984487873, b=6211965468307518) -> bool:\n    \"\"\"Find n that when divided by b is a\"\"\"\n    return n // b == a\ndef g(a = -1950797984487873, b = 6211965468307518):\n    return a * b\nassert f(g())", "emb": [1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0]}]